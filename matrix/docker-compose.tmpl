version: "3.3"

services:

  element:
    image: vectorim/element-web:v1.11.31
    volumes:
      - ./element-config.json:/app/config.json
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.element.rule=Host(`element.${DOMAIN}`)"
      - "traefik.http.routers.element-tls.tls.domains[0].main=element.${DOMAIN}"
      - "traefik.http.routers.element-tls.tls.domains[0].sans=element-*.${DOMAIN}"
      - "traefik.http.routers.element.tls=true"
    env_file:
      - ../.env
    networks:
      - traefikme_default
    extra_hosts:
      - "matrix.${DOMAIN}:host-gateway"

  matrix:
    image: matrixdotorg/synapse:v1.83.0
    volumes:
     - matrix-data:/data
     - ./mx-conf:/mx-conf/
    environment:
      - SYNAPSE_CONFIG_PATH=/mx-conf/homeserver.yaml
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.synapse.rule=Host(`matrix.${DOMAIN}`)"
      - "traefik.http.routers.synapse.rule=HostRegexp(`matrix.{ip:.*}.${DOMAIN}`)"
      - "traefik.http.routers.synapse-tls.tls.domains[0].main=matrix.${DOMAIN}"
      - "traefik.http.routers.synapse-tls.tls.domains[0].sans=matrix-*.${DOMAIN}"
      - "traefik.http.routers.synapse.tls=true"
    env_file:
      - ../.env
    networks:
      - traefikme_default

  slack-bridge:
    depends_on:
      - slack-bridge_db
      - matrix
    restart: on-failure
    image: matrixdotorg/matrix-appservice-slack:latest
    volumes:
      - ./slack-bridge-config:/config
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.slack-bridge.rule=Host(`slack-bridge.${DOMAIN}`)"
      - "traefik.http.routers.slack-bridge.rule=HostRegexp(`slack-bridge.{ip:.*}.${DOMAIN}`)"
      - "traefik.http.routers.slack-bridge-tls.tls.domains[0].main=slack-bridge.${DOMAIN}"
      - "traefik.http.routers.slack-bridge-tls.tls.domains[0].sans=slack-bridge-*.${DOMAIN}"
      - "traefik.http.routers.slack-bridge.tls=true"
    env_file:
      - ../.env
    networks:
      - traefikme_default
    extra_hosts:
      - "postgresql.${DOMAIN}:host-gateway"
      - "matrix.${DOMAIN}:host-gateway"

  slack-bridge_db:
    image: postgres:14-alpine
    volumes:
      - slack-bridge-db:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=slack_bridge
      - POSTGRES_USER=slackbridge_user
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.postgresql.rule=Host(`postgresql.${DOMAIN}`)"
      - "traefik.http.routers.postgresql.rule=HostRegexp(`postgresql.{ip:.*}.${DOMAIN}`)"
      - "traefik.http.routers.postgresql-tls.tls.domains[0].main=postgresql.${DOMAIN}"
      - "traefik.http.routers.postgresql-tls.tls.domains[0].sans=postgresql-*.${DOMAIN}"
      - "traefik.http.routers.postgresql.tls=true"
    env_file:
      - ../.env
    networks:
      - traefikme_default

  discord-bridge:
    depends_on:
      - matrix
    restart: on-failure
    image: halfshot/matrix-appservice-discord:develop
    volumes:
      - ./discord-bridge-config:/data
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.discord-bridge.rule=Host(`discord-bridge.$DOMAIN`)"
      - "traefik.http.routers.discord-bridge.rule=HostRegexp(`discord-bridge.{ip:.*}.${DOMAIN}`)"
      - "traefik.http.routers.discord-bridge-tls.tls.domains[0].main=discord-bridge.${DOMAIN}"
      - "traefik.http.routers.discord-bridge-tls.tls.domains[0].sans=discord-bridge-*.${DOMAIN}"
      - "traefik.http.routers.discord-bridge.tls=true"
    extra_hosts:
      - "matrix.${DOMAIN}:host-gateway"
    env_file:
      - ../.env
    networks:
      - traefikme_default
    extra_hosts:
      - "matrix.traefik.me:host-gateway"

volumes:
  matrix-data:
  slack-bridge-db:

networks:
  traefikme_default:
    external: true
